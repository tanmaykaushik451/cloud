{"ast":null,"code":"var _jsxFileName = \"/home/tanmay/tanmay/mycrypto-master/src/pages/converter/Converter.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { getCoins, getCurrencies } from './api';\nimport Select from 'react-select';\nimport { getCalculatedPrice } from '../home/api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Converter = () => {\n  _s();\n\n  const [currencies, setCurrencies] = useState([]);\n  const [coins, setCoins] = useState([]);\n  const [selectedCoin, setSelectedCoin] = useState(\"\");\n  const [selectedCurrency, setSelectedCurrency] = useState(\"\");\n  const [calculated, setCalculated] = useState(null);\n  useEffect(() => {\n    getCurrencies().then(res => {\n      var _res$data;\n\n      setCurrencies((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.map(a => {\n        return {\n          value: a,\n          label: a\n        };\n      }));\n    }).catch(e => {\n      console.log(\"Get curr failed\");\n    });\n    getCoins().then(res => {\n      var _res$data2;\n\n      setCoins((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.map(a => {\n        return {\n          value: a.id,\n          label: a.id\n        };\n      }).filter(b => !b.label.includes(\"-\")));\n    }).catch(e => {\n      console.log(\"GEt coins failes\");\n    });\n  }, []);\n\n  const handleCoinChange = selectedOption => {\n    setSelectedCoin(selectedOption);\n  };\n\n  const handleCurrencyChange = selectedOption => {\n    setSelectedCurrency(selectedOption);\n  };\n\n  const handleCalculate = () => {\n    if (selectedCoin === \"\") {\n      return toast.warn(\"Please Select a Coin\");\n    } else if (selectedCurrency === \"\") {\n      return toast.warn(\"Please Select a Currency\");\n    }\n\n    getCalculatedPrice(selectedCoin === null || selectedCoin === void 0 ? void 0 : selectedCoin.value, selectedCurrency === null || selectedCurrency === void 0 ? void 0 : selectedCurrency.value).then(res => {\n      var c = Object.values(res.data)[0];\n      var d = Object.values(c)[0];\n      setCalculated(d);\n    });\n  }; // console.log(selectedCoin, selectedCurrency)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Converter row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Converter__label col-md-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-purple\",\n        children: \"Crypto \\u2192 Currency Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-grey\",\n        children: \"Get the current price of any cryptocurrencies in any other supported currencies that you need\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Converter__calculator col-md-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedCoin,\n          onChange: e => handleCoinChange(e),\n          options: coins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedCurrency,\n          onChange: e => handleCurrencyChange(e),\n          options: currencies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-primary\",\n          type: \"button\",\n          onClick: () => handleCalculate(),\n          children: \"Calculate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-1\",\n        children: calculated && /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: calculated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Converter, \"G0S/o58EuLO3dYuYWF+u0PIn+k4=\");\n\n_c = Converter;\nexport default Converter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"sources":["/home/tanmay/tanmay/mycrypto-master/src/pages/converter/Converter.js"],"names":["React","useState","useEffect","getCoins","getCurrencies","Select","getCalculatedPrice","ToastContainer","toast","Converter","currencies","setCurrencies","coins","setCoins","selectedCoin","setSelectedCoin","selectedCurrency","setSelectedCurrency","calculated","setCalculated","then","res","data","map","a","value","label","catch","e","console","log","id","filter","b","includes","handleCoinChange","selectedOption","handleCurrencyChange","handleCalculate","warn","c","Object","values","d"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { useEffect } from 'react'\nimport { getCoins, getCurrencies } from './api'\nimport Select from 'react-select';\nimport { getCalculatedPrice } from '../home/api';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\n\nconst Converter = () => {\n\n    const [currencies, setCurrencies] = useState([])\n    const [coins, setCoins] = useState([])\n    const [selectedCoin, setSelectedCoin] = useState(\"\")\n    const [selectedCurrency, setSelectedCurrency] = useState(\"\")\n    const [calculated, setCalculated] = useState(null)\n\n    useEffect(() => {\n        getCurrencies().then((res) => {\n            setCurrencies(res.data?.map((a) => {\n                return {\n                    value: a,\n                    label: a\n                }\n            }))\n        }).catch((e) => {\n            console.log(\"Get curr failed\")\n        })\n\n        getCoins().then((res) => {\n            setCoins(res.data?.map((a) => {\n                return {\n                    value: a.id,\n                    label: a.id\n                }\n            }).filter((b)=>!b.label.includes(\"-\")))\n        }).catch((e) => {\n            console.log(\"GEt coins failes\")\n        })\n    }, [])\n\n    const handleCoinChange = (selectedOption) => {\n        setSelectedCoin(selectedOption)\n    }\n\n    const handleCurrencyChange = (selectedOption) => {\n        setSelectedCurrency(selectedOption)\n    }\n\n    const handleCalculate = ()=>{\n        if(selectedCoin===\"\"){\n        return toast.warn(\"Please Select a Coin\")\n    }\n    else if(selectedCurrency===\"\"){\n        return toast.warn(\"Please Select a Currency\")\n    }\n        getCalculatedPrice(selectedCoin?.value,selectedCurrency?.value).then((res)=>{\n            var c = Object.values(res.data)[0]\n            var d = Object.values(c)[0]\n            setCalculated(d)\n        })\n    }\n\n    // console.log(selectedCoin, selectedCurrency)\n\n    return (\n        <div className=\"Converter row\">\n            <div className=\"Converter__label col-md-6\">\n                <h1 className=\"text-purple\">Crypto → Currency Calculator</h1>\n                <h4 className=\"text-grey\">Get the current price of any cryptocurrencies in any other supported currencies that you need</h4>\n            </div>\n            <div className=\"Converter__calculator col-md-6\">\n                <div className=\"mb-3\">\n                    <Select\n                        value={selectedCoin}\n                        onChange={(e) => handleCoinChange(e)}\n                        options={coins}\n                    />\n                </div>\n                <div>\n                    <Select\n                        value={selectedCurrency}\n                        onChange={(e) => handleCurrencyChange(e)}\n                        options={currencies}\n                    />\n                </div>\n                <div className=\"my-3\">\n                    <button  className=\"btn-primary\" type=\"button\" onClick={()=>handleCalculate()}>Calculate</button>\n                </div>\n                <div className=\"my-1\">\n                    {calculated && <h4>{calculated}</h4>}\n                </div>\n                <ToastContainer/>\n            </div>\n        </div>\n    )\n}\n\nexport default Converter\n"]},"metadata":{},"sourceType":"module"}