{"ast":null,"code":"var _jsxFileName = \"/home/tanmay/tanmay/mycrypto-master/src/pages/home/components/Table/CirculatingCell/CirculatingCell.js\";\nimport React from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport Progressbar from '../../../../../reuseable/Progressbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CirculatingCell = props => {\n  const {\n    circulating_supply,\n    symbol,\n    percentage,\n    max_supply\n  } = props.value;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CirculatingCell d-flex flex-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        \"data-tip\": true,\n        \"data-for\": `CirculatingCell__tooltip__${symbol}`,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-info-circle text-grey pe-1\",\n          style: {\n            fontSize: \"12px\"\n          },\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 78\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: `CirculatingCell__tooltip__${symbol}`,\n        type: \"light\",\n        place: \"bottom\",\n        border: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CirculatingCell__tipcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"CirculatingCell__tipcontainer__data\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"bold\",\n              children: \"Percentage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [percentage.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"my-2\",\n            children: /*#__PURE__*/_jsxDEV(Progressbar, {\n              progress: percentage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"CirculatingCell__tipcontainer__data\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"bold\",\n              children: \"Circulating Supply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [circulating_supply.toLocaleString(\"en-US\"), \"\\xA0\", symbol.toUpperCase()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"CirculatingCell__tipcontainer__data\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"bold\",\n              children: \"Max Supply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [max_supply === null || max_supply === void 0 ? void 0 : max_supply.toLocaleString(\"en-US\"), \"\\xA0\", symbol.toUpperCase()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pe-1\",\n        children: circulating_supply.toLocaleString(\"en-US\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pe-1\",\n        children: symbol.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Progressbar, {\n        progress: percentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CirculatingCell;\nexport default CirculatingCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"CirculatingCell\");","map":{"version":3,"sources":["/home/tanmay/tanmay/mycrypto-master/src/pages/home/components/Table/CirculatingCell/CirculatingCell.js"],"names":["React","ReactTooltip","Progressbar","CirculatingCell","props","circulating_supply","symbol","percentage","max_supply","value","fontSize","toFixed","toLocaleString","toUpperCase"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport Progressbar from '../../../../../reuseable/Progressbar'\n\nconst CirculatingCell = (props) => {\n\n    const { circulating_supply, symbol, percentage, max_supply } = props.value\n\n    return (\n        <div className=\"CirculatingCell d-flex flex-column\">\n            <div className=\"d-flex align-items-center\">\n                <a data-tip data-for={`CirculatingCell__tooltip__${symbol}`}><i className=\"fa fa-info-circle text-grey pe-1\" style={{ fontSize: \"12px\" }} aria-hidden=\"true\" />\n                </a>\n                <ReactTooltip id={`CirculatingCell__tooltip__${symbol}`} type=\"light\" place=\"bottom\" border>\n                    <div className=\"CirculatingCell__tipcontainer\">\n                        <div className=\"CirculatingCell__tipcontainer__data\">\n                            <small className=\"bold\">Percentage</small>\n                            <small>{percentage.toFixed(2)}%</small>\n                        </div>\n                        <div className=\"my-2\">\n                            <Progressbar progress={percentage} />\n                        </div>\n                        <div className=\"CirculatingCell__tipcontainer__data\">\n                            <small className=\"bold\">Circulating Supply</small>\n                            <small>{circulating_supply.toLocaleString(\"en-US\")}&nbsp;{symbol.toUpperCase()}</small>\n                        </div>\n                        <div className=\"CirculatingCell__tipcontainer__data\">\n                            <small className=\"bold\">Max Supply</small>\n                            <small>{max_supply?.toLocaleString(\"en-US\")}&nbsp;{symbol.toUpperCase()}</small>\n                        </div>\n                    </div>\n                </ReactTooltip>\n                <span className=\"pe-1\">{circulating_supply.toLocaleString(\"en-US\")}</span>\n                <span className=\"pe-1\">{symbol.toUpperCase()}</span>\n            </div>\n            <div>\n                <Progressbar progress={percentage} />\n            </div>\n        </div>\n    )\n}\n\nexport default CirculatingCell\n"]},"metadata":{},"sourceType":"module"}