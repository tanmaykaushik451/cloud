{"ast":null,"code":"var _jsxFileName = \"/home/tanmay/tanmay/mycrypto-master/src/pages/home/components/Table/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTable, useSortBy, usePagination, useRowSelect } from \"react-table\";\nimport { COLUMNS } from \"./columns\"; // import MOCK_DATA from \"../../../../MOCK_DATA.json\"\n\nimport { Checkbox } from './Checkbox';\nimport { useEffect } from 'react';\nimport { getTableData } from \"../../api\";\nimport { useState } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport Loader from \"../../../../reuseable/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = () => {\n  _s();\n\n  const [data, setTableData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    getTableData().then(res => {\n      setTableData(res.data);\n      setLoading(false);\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []);\n\n  const handlePageClick = ({\n    selected: selectedPage\n  }) => {\n    gotoPage(selectedPage);\n  };\n\n  const columns = useMemo(() => COLUMNS, []); // const data = useMemo(() => tableData, [])\n\n  const tableInstance = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0,\n      pageSize: 25\n    }\n  }, useSortBy, usePagination, useRowSelect);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    page,\n    nextPage,\n    previousPage,\n    pageOptions,\n    state,\n    canNextPage,\n    canPreviousPage,\n    prepareRow,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    selectedFlatRows\n  } = tableInstance; // const firstPageRows = page.slice(0,10)\n\n  const {\n    pageIndex,\n    pageSize\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Table__table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n              children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"small bold\",\n                ...column.getHeaderProps(column.getSortByToggleProps()),\n                children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-caret-down\",\n                    \"aria-hidden\": \"true\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 91\n                  }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-caret-up\",\n                    \"aria-hidden\": \"true\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 55\n                  }, this) : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n            children: [page.map(row => {\n              prepareRow(row);\n              return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n                children: row.cells.map(cell => {\n                  return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                    children: cell.render('Cell')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 48\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Table__footerbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Table__footerbar__pageno\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [pageIndex + 1, \" of \", pageOptions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n            previousLabel: 'prev',\n            nextLabel: 'next',\n            breakLabel: '...',\n            breakClassName: 'break-me',\n            pageCount: pageOptions.length,\n            marginPagesDisplayed: 2,\n            pageRangeDisplayed: 5,\n            onPageChange: handlePageClick,\n            containerClassName: \"pagination\",\n            previousLinkClassName: \"pagination__link\",\n            nextLinkClassName: \"pagination__link\",\n            disabledClassName: \"pagination__link--disabled\",\n            activeClassName: \"pagination__link--active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: pageSize,\n            onChange: e => setPageSize(Number(e.target.value)),\n            children: [10, 25, 50].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: pageSize,\n              children: pageSize\n            }, pageSize, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Table, \"vlM6TgvpWZVaXwBjHm/HHVK1s2w=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/tanmay/tanmay/mycrypto-master/src/pages/home/components/Table/Table.js"],"names":["React","useMemo","useTable","useSortBy","usePagination","useRowSelect","COLUMNS","Checkbox","useEffect","getTableData","useState","ReactPaginate","Loader","Table","data","setTableData","loading","setLoading","then","res","catch","e","console","log","handlePageClick","selected","selectedPage","gotoPage","columns","tableInstance","initialState","pageIndex","pageSize","getTableProps","getTableBodyProps","headerGroups","rows","page","nextPage","previousPage","pageOptions","state","canNextPage","canPreviousPage","prepareRow","pageCount","setPageSize","selectedFlatRows","width","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","length","Number","target","value"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport { useTable, useSortBy, usePagination, useRowSelect } from \"react-table\"\nimport { COLUMNS } from \"./columns\"\n// import MOCK_DATA from \"../../../../MOCK_DATA.json\"\nimport { Checkbox } from './Checkbox'\nimport { useEffect } from 'react'\nimport { getTableData } from \"../../api\"\nimport { useState } from 'react'\nimport ReactPaginate from 'react-paginate';\nimport Loader from \"../../../../reuseable/Loader/Loader\"\n\n\n\nconst Table = () => {\n\n    const [data, setTableData] = useState([])\n    const [loading,setLoading] = useState(false)\n\n    useEffect(() => {\n        setLoading(true)\n        getTableData().then((res) => {\n            setTableData(res.data)\n            setLoading(false)\n        }).catch((e) => {\n            console.log(e)\n        })\n    }, [])\n\n    const handlePageClick = ({ selected: selectedPage }) => {\n        gotoPage(selectedPage);\n    }\n\n    const columns = useMemo(() => COLUMNS, [])\n    // const data = useMemo(() => tableData, [])\n\n    const tableInstance = useTable({\n        columns,\n        data,\n        initialState: {\n            pageIndex: 0,\n            pageSize: 25\n        }\n    }, useSortBy, usePagination, useRowSelect)\n\n    const { getTableProps, getTableBodyProps, headerGroups, rows, page, nextPage, previousPage, pageOptions, state, canNextPage, canPreviousPage, prepareRow, gotoPage, pageCount, setPageSize, selectedFlatRows } = tableInstance\n\n    // const firstPageRows = page.slice(0,10)\n\n    const { pageIndex, pageSize } = state\n    return (\n        <>\n        {!loading ? <div className=\"Table\">\n            <div className=\"Table__table\">\n                <table {...getTableProps()} style={{ width: \"100%\" }}>\n                    <thead>\n                        {\n                            headerGroups.map(headerGroup => (\n                                <tr {...headerGroup.getHeaderGroupProps()}>\n                                    {headerGroup.headers.map(column => (\n                                        <th className=\"small bold\" {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                            {column.render('Header')}\n                                            <span>\n                                                {column.isSorted ? (column.isSortedDesc ? <i className=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                                                    : <i className=\"fa fa-caret-up\" aria-hidden=\"true\"></i>) : ''}\n                                            </span>\n                                        </th>\n                                    ))}\n                                </tr>\n                            ))\n                        }\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                        {page.map(row => {\n                            prepareRow(row)\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {row.cells.map(cell => {\n                                        return <td {...cell.getCellProps()}>\n                                            {cell.render('Cell')}\n                                        </td>\n                                    })}\n                                </tr>\n                            )\n                        })}\n                        <tr>\n                            <td></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"Table__footerbar\">\n                <div className=\"Table__footerbar__pageno\">\n                <span>\n                    Page{' '}\n                    <strong>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </strong>\n                </span>\n                </div>\n                <div>\n                    <ReactPaginate\n                        previousLabel={'prev'}\n                        nextLabel={'next'}\n                        breakLabel={'...'}\n                        breakClassName={'break-me'}\n                        pageCount={pageOptions.length}\n                        marginPagesDisplayed={2}\n                        pageRangeDisplayed={5}\n                        onPageChange={handlePageClick}\n                        containerClassName={\"pagination\"}\n                        previousLinkClassName={\"pagination__link\"}\n                        nextLinkClassName={\"pagination__link\"}\n                        disabledClassName={\"pagination__link--disabled\"}\n                        activeClassName={\"pagination__link--active\"}\n                    />\n\n                </div>\n                <div>\n                <select value={pageSize} onChange={(e) => setPageSize(Number(e.target.value))}>\n                    {[10, 25, 50].map((pageSize) => (\n                        <option key={pageSize} value={pageSize}>\n                            {pageSize}\n                        </option>\n                    ))}\n                </select>\n                </div>\n            </div>\n        </div>\n        :\n        <Loader/>}\n        </>\n    )\n}\n\nexport default Table\n"]},"metadata":{},"sourceType":"module"}